{
	"title":	"#include <windows.h>\r",
	"type":	"",
	"source":	"",
	"date-time":	"Mon Feb 26 22:11:33 2024\n",
	"content":	"#include <windows.h>\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n#include <ctype.h>\r\n\r\n#include \"main.h\"\r\n\r\nstruct clipboard_container container_in;\r\n\r\nHWND hwndNextViewer; // Handle to the next clipboard viewer\r\n\r\nBOOL open_clipboard(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam)\r\n{\r\n    // Open the clipboard\r\n    if (OpenClipboard(hwnd))\r\n    {\r\n        struct clipboard_container CargoClip;\r\n        // Check for HTML format\r\n        UINT htmlFormat = RegisterClipboardFormat(TEXT(\"HTML Format\"));\r\n\r\n        HANDLE hHtmlData = GetClipboardData(htmlFormat);\r\n\r\n        if (hHtmlData != NULL)\r\n        {\r\n            // Lock the data to get a pointer to the HTML text\r\n            char *htmlText = (char *)GlobalLock(hHtmlData);\r\n\r\n            if (htmlText != NULL)\r\n            {\r\n                // Find and print HTML content\r\n                check_html(htmlText);\r\n\r\n                // Unlock the data\r\n                GlobalUnlock(hHtmlData);\r\n            }\r\n        }\r\n\r\n        // Handle plain text format (CF_TEXT)\r\n        HANDLE hClipboardData = GetClipboardData(CF_TEXT);\r\n\r\n        if (hClipboardData != NULL)\r\n        {\r\n            // Lock the data to get a pointer to the text\r\n            char *clipboardText = (char *)GlobalLock(hClipboardData);\r\n\r\n            if (clipboardText != NULL)\r\n            {\r\n                // process the plain text content\r\n                process_container_in(clipboardText);\r\n\r\n                // Unlock the data\r\n                GlobalUnlock(hClipboardData);\r\n            }\r\n        }\r\n\r\n        // Close the clipboard\r\n        CloseClipboard();\r\n\r\n        return TRUE;\r\n    }\r\n\r\n    return FALSE;\r\n}\r\n\r\nLRESULT CALLBACK view_clipboard(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam)\r\n{\r\n    if (uMsg == WM_DRAWCLIPBOARD)\r\n    {\r\n        // Open the clipboard\r\n        if (uMsg == WM_DRAWCLIPBOARD)\r\n        {\r\n            // Open the clipboard\r\n            if (open_clipboard(hwnd, uMsg, wParam, lParam))\r\n            {\r\n                // Call the next viewer in the chain\r\n                SendMessage(hwndNextViewer, uMsg, wParam, lParam);\r\n            }\r\n        }\r\n        // Call the next viewer in the chain\r\n        SendMessage(hwndNextViewer, uMsg, wParam, lParam);\r\n    }\r\n    // Call the default window procedure for other messages\r\n    return DefWindowProc(hwnd, uMsg, wParam, lParam);\r\n}\r\n\r\n// Function to set up the clipboard viewer\r\nvoid SetupClipboardViewer()\r\n{\r\n    // Create an invisible window to handle clipboard messages\r\n    HWND hwnd = CreateWindowW(\r\n        L\"STATIC\",\r\n        L\"Clipboard Viewer\",\r\n        WS_OVERLAPPEDWINDOW,\r\n        CW_USEDEFAULT, CW_USEDEFAULT,\r\n        CW_USEDEFAULT, CW_USEDEFAULT,\r\n        NULL,\r\n        NULL,\r\n        NULL,\r\n        NULL);\r\n\r\n    // Set the clipboard viewer window procedure\r\n    SetWindowLongPtr(hwnd, GWLP_WNDPROC, (LONG_PTR)view_clipboard);\r\n\r\n    // Set up as a clipboard viewer and get the handle to the next viewer\r\n    hwndNextViewer = SetClipboardViewer(hwnd);\r\n}\r\n\r\nint main()\r\n{\r\n\r\n    SetConsoleTitle(\"subtacs\");\r\n    // Set up the clipboard viewer\r\n    SetupClipboardViewer();\r\n\r\n    // Run the message loop\r\n    MSG msg;\r\n    while (GetMessage(&msg, NULL, 0, 0))\r\n    {\r\n        TranslateMessage(&msg);\r\n        DispatchMessage(&msg);\r\n    }\r\n\r\n    // Remove the viewer before exiting\r\n    ChangeClipboardChain(hwndNextViewer, NULL);\r\n\r\n    return 0;\r\n}",
	"urls":	[],
	"emails":	[]
}
